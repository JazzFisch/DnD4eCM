//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DnD4e.CombatManager.Test.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DnD4e.CombatManager.Test.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ko.bindingHandlers.abilityScore = {
        ///    update: function (element, valueAccessor) {
        ///        var value = valueAccessor(),
        ///            bonus = Math.floor(value / 2) - 5,
        ///            sign = bonus &gt; 0 ? &apos;+&apos; : &apos;&apos;,
        ///            text = value + &apos; (&apos; + sign + bonus + &apos;)&apos;;
        ///        ko.bindingHandlers.text.update(element, function() { return text; });
        ///    }
        ///};
        ///
        ///ko.bindingHandlers.powerFont = {
        ///    update: function (element, valueAccessor) {
        ///        var value = valueAccessor(),
        ///            power = _.isObject [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bindingHandlers_js {
            get {
                return ResourceManager.GetString("bindingHandlers_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title data-bind=&quot;text: Character().Name&quot;&gt;&lt;/title&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;D&amp;amp;D 4E Character StatBlock display&quot; /&gt;
        ///    &lt;meta name=&quot;author&quot; content=&quot;Jason Fischer&quot; /&gt;
        ///    &lt;!--&lt;link type=&apos;text/css&apos; href=&apos;statblock.css&apos; media=&apos;screen&apos; rel=&apos;stylesheet&apos; /&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;underscore.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;jquery-1.10.2.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;knockout-3.0.0.debug.js&apos;&gt;&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string characterStatblock_html {
            get {
                return ResourceManager.GetString("characterStatblock_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ViewModel() {
        ///    var self = this;
        ///
        ///    this.Bound = false;
        ///
        ///    this.Character = ko.observable();
        ///
        ///    this.Bloodied = function () {
        ///        return (self.Character().HitPoints / 2).toFixed(0);
        ///    };
        ///    this.LevelString = function () {
        ///        var groupRole = self.Character().GroupRole,
        ///            role = self.Character().Role
        ///            parts = [];
        ///
        ///        parts.push(&apos;Level&apos;);
        ///        parts.push(self.Character().Level);
        ///        if (groupRole !== &apos;Standard&apos;) {
        ///            part [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string characterStatblock_js {
            get {
                return ResourceManager.GetString("characterStatblock_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * jQuery JavaScript Library v1.10.2
        /// * http://jquery.com/
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// *
        /// * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
        /// * Released under the MIT license
        /// * http://jquery.org/license
        /// *
        /// * Date: 2013-07-03T13:48Z
        /// */
        ///(function( window, undefined ) {
        ///
        ///// Can&apos;t do this because several apps including ASP.NET trace
        ///// the stack via arguments.caller.callee and Firefox dies if
        ///// you try to trace through &quot;use strict&quot; call chains. ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_1_10_2_js {
            get {
                return ResourceManager.GetString("jquery_1_10_2_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Knockout JavaScript library v3.0.0
        ///// (c) Steven Sanderson - http://knockoutjs.com/
        ///// License: MIT (http://www.opensource.org/licenses/mit-license.php)
        ///
        ///(function(){
        ///var DEBUG=true;
        ///(function(undefined){
        ///    // (0, eval)(&apos;this&apos;) is a robust way of getting a reference to the global object
        ///    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023
        ///    var window = this || (0, eval)(&apos;this&apos;),
        ///        document = window[&apos;document&apos;],
        ///        navigato [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string knockout_3_0_0_debug_js {
            get {
                return ResourceManager.GetString("knockout_3_0_0_debug_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* --- String interpolating binding provider ---
        ///   Allows {{ expr }} syntax in DOM. Could be an official KO plugin
        ///   loaded from a separate file. Note that preprocessNode is a fairly
        ///   low-level API that developers are not often expected to use directly.
        ///*/
        ///
        ///var StringInterpolatingBindingProvider = function() {
        ///    this.constructor = StringInterpolatingBindingProvider;
        ///
        ///    var expressionRegex = /{{([\s\S]+?)}}/g;
        ///
        ///    this.preprocessNode = function(node) {
        ///        if (node.nodeType === 3 &amp;&amp;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string knockout_StringInterpolatingBindingProvider_js {
            get {
                return ResourceManager.GetString("knockout_StringInterpolatingBindingProvider_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! ko.ninja - v0.0.1 - 2013-10-23
        ///* Copyright (c) 2013 ; Licensed  */
        ///(function (root, factory) {
        ///    if (typeof define === &apos;function&apos; &amp;&amp; define.amd) {
        ///        define([&apos;knockout&apos;, &apos;underscore&apos;], factory);
        ///    } else if (typeof exports === &apos;object&apos;) {
        ///        module.exports = factory(require(&apos;knockout&apos;), require(&apos;underscore&apos;));
        ///    } else {
        ///        root.ko = factory(root.ko, root._, root.$);
        ///    }
        ///}(this, function (ko, _) {
        ///
        ///var extend = function(protoProps, staticProps) {
        ///    var parent = this [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ko_ninja_js {
            get {
                return ResourceManager.GetString("ko_ninja_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Modernizr v2.6.2
        /// * www.modernizr.com
        /// *
        /// * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton
        /// * Available under the BSD and MIT licenses: www.modernizr.com/license/
        /// */
        ///
        ////*
        /// * Modernizr tests which native CSS3 and HTML5 features are available in
        /// * the current UA and makes the results available to you in two ways:
        /// * as properties on a global Modernizr object, and as classes on the
        /// * &lt;html&gt; element. This information allows you to progressively enhance
        /// * your pages with a granular leve [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string modernizr_2_6_2_js {
            get {
                return ResourceManager.GetString("modernizr_2_6_2_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title data-bind=&quot;text: Monster().Name&quot;&gt;&lt;/title&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;D&amp;amp;D 4E Monster StatBlock display&quot; /&gt;
        ///    &lt;meta name=&quot;author&quot; content=&quot;Jason Fischer&quot; /&gt;
        ///    &lt;!--&lt;link type=&apos;text/css&apos; href=&apos;statblock.css&apos; media=&apos;screen&apos; rel=&apos;stylesheet&apos; /&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;underscore.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;jquery-1.10.2.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;knockout-3.0.0.debug.js&apos;&gt;&lt;/scri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string monsterStatblock_html {
            get {
                return ResourceManager.GetString("monsterStatblock_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // http://jsfiddle.net/7P8Tp/
        ///
        ///// adept of orcus
        /////var debugJson = &apos;{&quot;CompendiumUrl&quot;:&quot;http://www.wizards.com/dndinsider/compendium/monster.aspx?id=4887&quot;,&quot;Description&quot;:&quot;In the dark shrine, they spoke in whispers of the fallen priest who had died with a prayer to Orcus on his lips. He might have remained dead, his soul to become a plaything of Orcus, except that he had killed and consumed a priest of Bahamut when he was alive. After his death, he underwent a horrid and unholy transformation. Now, as he ris [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string monsterStatblock_js {
            get {
                return ResourceManager.GetString("monsterStatblock_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! normalize.css v2.1.2 | MIT License | git.io/normalize */
        ///
        ////* ==========================================================================
        ///   HTML5 display definitions
        ///   ========================================================================== */
        ///
        ////**
        /// * Correct `block` display not defined in IE 8/9.
        /// */
        ///
        ///article,
        ///aside,
        ///details,
        ///figcaption,
        ///figure,
        ///footer,
        ///header,
        ///hgroup,
        ///main,
        ///nav,
        ///section,
        ///summary {
        ///    display: block;
        ///}
        ///
        ////**
        /// * Correct `inline-block` display not defined in I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string normalize_css {
            get {
                return ResourceManager.GetString("normalize_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html {
        ///    font-family: Arial, Sans-Serif; 
        ///    font-size: 9.5pt
        ///}  
        ///
        ///body {
        ///    font-weight: normal;
        ///    margin: 0px; 
        ///    padding: 0px; 
        ///    text-align:left; 
        ///}
        ///
        ///table {
        ///    border: 0px;
        ///    border-spacing: 0px 1px;
        ///    cellpadding: 0px; 
        ///    cellspacing: 0px;
        ///    width: 100%;
        ///}
        ///
        ///div.monster table.header {
        ///    background-color: #374b27; 
        ///    color: #ffffff;
        ///    min-height: 14px;
        ///    padding: 2px 3px 2px 3px;
        ///}
        ///
        ///div.trap table.header .bold,
        ///div.monster table.header .bold {
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string statblock_css {
            get {
                return ResourceManager.GetString("statblock_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var Combatant = ko.ViewModel.extend({
        ///    
        ///});
        ///
        ///var Character = Combatant.extend({
        ///});
        ///
        ///var Monster = Combatant.extend({
        ///});
        ///
        ///var Trap = Combatant.extend({
        ///});
        ///
        ///var Browser = {
        ///    Version: function() {
        ///        var version = 999; // we assume a sane browser
        ///        if (navigator.appVersion.indexOf(&quot;MSIE&quot;) != -1) {
        ///            // bah, IE again, lets downgrade version number
        ///            version = parseFloat(navigator.appVersion.split(&quot;MSIE&quot;)[1]);
        ///        }
        ///        return version;
        ///    }
        ///} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string statblockHelpers_js {
            get {
                return ResourceManager.GetString("statblockHelpers_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title data-bind=&quot;text: Trap().Name&quot;&gt;&lt;/title&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;D&amp;amp;D 4E Trap StatBlock display&quot; /&gt;
        ///    &lt;meta name=&quot;author&quot; content=&quot;Jason Fischer&quot; /&gt;
        ///    &lt;!--&lt;link type=&apos;text/css&apos; href=&apos;statblock.css&apos; media=&apos;screen&apos; rel=&apos;stylesheet&apos; /&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;underscore.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;jquery-1.10.2.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;knockout-3.0.0.debug.js&apos;&gt;&lt;/script&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string trapStatblock_html {
            get {
                return ResourceManager.GetString("trapStatblock_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function ViewModel() {
        ///    var self = this;
        ///
        ///    this.Bound = false;
        ///
        ///    this.Trap = ko.observable();
        ///
        ///    this.LevelString = function () {
        ///        var groupRole = self.Trap().GroupRole,
        ///            role = self.Trap().Role
        ///            parts = [];
        ///
        ///        parts.push(&apos;Level&apos;);
        ///        parts.push(self.Trap().Level);
        ///        if (role !== &apos;No Role&apos;) {
        ///            parts.push(role);
        ///        }
        ///        return parts.join(&apos; &apos;);
        ///    };
        ///    this.XPString = function () {
        ///        return &apos;XP &apos; + toCom [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string trapStatblock_js {
            get {
                return ResourceManager.GetString("trapStatblock_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //     Underscore.js 1.5.2
        /////     http://underscorejs.org
        /////     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters &amp; Editors
        /////     Underscore may be freely distributed under the MIT license.
        ///
        ///(function() {
        ///
        ///  // Baseline setup
        ///  // --------------
        ///
        ///  // Establish the root object, `window` in the browser, or `exports` on the server.
        ///  var root = this;
        ///
        ///  // Save the previous value of the `_` variable.
        ///  var previousUnderscore = root._;
        ///
        ///  // Establish the object that ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string underscore_js {
            get {
                return ResourceManager.GetString("underscore_js", resourceCulture);
            }
        }
    }
}
