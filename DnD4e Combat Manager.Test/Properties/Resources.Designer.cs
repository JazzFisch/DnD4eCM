//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DnD4e.CombatManager.Test.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DnD4e.CombatManager.Test.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ko.bindingHandlers.abilityScore = {
        ///    update: function (element, valueAccessor) {
        ///        var value = valueAccessor(),
        ///            bonus = Math.floor(value / 2) - 5,
        ///            sign = bonus &gt; 0 ? &apos;+&apos; : &apos;&apos;,
        ///            text = value + &apos; (&apos; + sign + bonus + &apos;)&apos;;
        ///        ko.bindingHandlers.text.update(element, function() { return text; })
        ///    }
        ///};
        ///
        ///ko.bindingHandlers.stringArray = {
        ///    update: function (element, valueAccessor, allBindingsAccessor) {
        ///        var list = ko.utils.unwrapObservable(v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bindingHandlers_js {
            get {
                return ResourceManager.GetString("bindingHandlers_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Knockout JavaScript library v2.2.1
        ///// (c) Steven Sanderson - http://knockoutjs.com/
        ///// License: MIT (http://www.opensource.org/licenses/mit-license.php)
        ///
        ///(function(){
        ///var DEBUG=true;
        ///(function(window,document,navigator,jQuery,undefined){
        ///!function(factory) {
        ///    // Support three module loading scenarios
        ///    if (typeof require === &apos;function&apos; &amp;&amp; typeof exports === &apos;object&apos; &amp;&amp; typeof module === &apos;object&apos;) {
        ///        // [1] CommonJS/Node.js
        ///        var target = module[&apos;exports&apos;] || exports; // module.exports i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string knockout_2_2_1_debug_js {
            get {
                return ResourceManager.GetString("knockout_2_2_1_debug_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /// Knockout Mapping plugin v2.4.0
        ////// (c) 2013 Steven Sanderson, Roy Jacobs - http://knockoutjs.com/
        ////// License: MIT (http://www.opensource.org/licenses/mit-license.php)
        ///(function (factory) {
        ///	// Module systems magic dance.
        ///
        ///	if (typeof require === &quot;function&quot; &amp;&amp; typeof exports === &quot;object&quot; &amp;&amp; typeof module === &quot;object&quot;) {
        ///		// CommonJS or Node: hard-coded dependency on &quot;knockout&quot;
        ///		factory(require(&quot;knockout&quot;), exports);
        ///	} else if (typeof define === &quot;function&quot; &amp;&amp; define[&quot;amd&quot;]) {
        ///		// AMD anonymous [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string knockout_mapping_latest_debug_js {
            get {
                return ResourceManager.GetString("knockout_mapping_latest_debug_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Modernizr v2.6.2
        /// * www.modernizr.com
        /// *
        /// * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton
        /// * Available under the BSD and MIT licenses: www.modernizr.com/license/
        /// */
        ///
        ////*
        /// * Modernizr tests which native CSS3 and HTML5 features are available in
        /// * the current UA and makes the results available to you in two ways:
        /// * as properties on a global Modernizr object, and as classes on the
        /// * &lt;html&gt; element. This information allows you to progressively enhance
        /// * your pages with a granular level of control  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string modernizr_2_6_2_js {
            get {
                return ResourceManager.GetString("modernizr_2_6_2_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title data-bind=&quot;text: Monster().Name&quot;&gt;&lt;/title&gt;
        ///    &lt;meta name=&quot;description&quot; content=&quot;D&amp;amp;D 4E Stat Block display&quot; /&gt;
        ///    &lt;meta name=&quot;author&quot; content=&quot;Jason Fischer&quot; /&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;http://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;http://cdnjs.cloudflare.com/ajax/libs/knockout/2.3.0/knockout-debug.js&apos;&gt;&lt;/script&gt;
        ///    &lt;script type=&apos;text/javascript&apos; src=&apos;bindingHandlers.js&apos;&gt;&lt;/s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string monsterStatblock_html {
            get {
                return ResourceManager.GetString("monsterStatblock_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var debugJson = &apos;{&quot;CompendiumUrl&quot;:&quot;http://www.wizards.com/dndinsider/compendium/monster.aspx?id=4578&quot;,&quot;Description&quot;:&quot;&quot;,&quot;GroupRole&quot;:&quot;Standard&quot;,&quot;IsLeader&quot;:false,&quot;Keywords&quot;:[],&quot;Immunities&quot;:[],&quot;Origin&quot;:&quot;Immortal&quot;,&quot;Phasing&quot;:false,&quot;Regeneration&quot;:0,&quot;Resistances&quot;:[],&quot;Role&quot;:&quot;Soldier&quot;,&quot;SavingThrows&quot;:0,&quot;SourceBook&quot;:&quot;Plane Above&quot;,&quot;SourceBooks&quot;:null,&quot;Tactics&quot;:null,&quot;Type&quot;:&quot;Humanoid&quot;,&quot;Weaknesses&quot;:[{&quot;Name&quot;:&quot;Acid&quot;,&quot;Details&quot;:&quot;or fire (if the battlesworn war troll defender takes acid or fire damage&quot;,&quot;Value&quot;:0},{&quot;Name&quot;:&quot;its&quot;,&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string monsterStatblock_js {
            get {
                return ResourceManager.GetString("monsterStatblock_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! normalize.css v2.1.2 | MIT License | git.io/normalize */
        ///
        ////* ==========================================================================
        ///   HTML5 display definitions
        ///   ========================================================================== */
        ///
        ////**
        /// * Correct `block` display not defined in IE 8/9.
        /// */
        ///
        ///article,
        ///aside,
        ///details,
        ///figcaption,
        ///figure,
        ///footer,
        ///header,
        ///hgroup,
        ///main,
        ///nav,
        ///section,
        ///summary {
        ///    display: block;
        ///}
        ///
        ////**
        /// * Correct `inline-block` display not defined in IE 8/9.
        /// */
        ///
        ///audio,
        ///canvas, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string normalize_css {
            get {
                return ResourceManager.GetString("normalize_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to html {font-family: Arial, Sans-Serif; font-size: 9.5pt}  
        ///body {margin: 0px; padding: 0px; text-align:left; font-weight: normal;}
        ///table {border: 0px; cellpadding: 0px; cellspacing: 0px;}
        ///DIV.symbol {font-family: 4etools symbols} 
        ///DIV.mbheadleft {float: left;  align: left; color: #ffffff; font-size: 13px; font-weight: bold;}  
        ///DIV.mbheadright {float: right; align: right; color: #ffffff; font-size: 13px; font-weight: bold;}  
        ///DIV.mbsubleft {float: left; align: left; color: #ffffff;}  
        ///DIV.mbsubright {f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string statblock_css {
            get {
                return ResourceManager.GetString("statblock_css", resourceCulture);
            }
        }
    }
}
